/**
 * 
 * @param req object 原始请求信息
 * <pre>
 * {
    "get": {
        "a": ["1"]
    }, 
    "method": "GET", 
    "path": "/test/a.php", 
    "request_uri": "/test/a.php?a=1",
    "remote_addr": "127.0.0.1:12345",
    "header": {
        "Accept": "text/html,application/xhtml+xml,application/xml;", 
        "Accept-Encoding": "gzip, deflate, sdch", 
        "Accept-Language": "zh-CN,zh;q=0.8,en;q=0.6", 
        "Cache-Control": "max-age=0", 
        "Connection": "close", 
        "Cookie": "_ga=GA1.1.967611859.xxxxxxx;cookie_b=xxxxx;", 
        "Dnt": "1", 
        "Upgrade-Insecure-Requests": "1", 
        "User-Agent": "Mozilla/5.0 xxxx ", 
        "Via": "api-front/0.7.6"
    }
}
 * </pre>
 * @param resp object 原始返回内容信息
 * <pre>
 * 
 {
    "content_length": 571, 
    "header": {
        "Content-Length": "571", 
        "Content-Type": "text/html", 
        "Date": "Sun, 29 May 2016 02:41:17 GMT", 
        "Server": "nginx/1.10.0"
    }, 
    "http_code": 403
}
 * </pre>
 * @return mixd  string|false
 * string-
 *    1.是url地址 对response进行修改处理的url地址，eg:http://example.com/response_modify.php
 *    2."not"字符串，跳过其他所有的规则，都不进行检测
 * false-
 *    不匹配，不修改response
 * 其他值，错误
 * @example
 * <pre>
 * if(req.path=="/test/a.php"){
 *   if(req.method=="POST"){
 *      return false;
 *   }else{
 *      return "http://example.com/response_modify.php";
 *   }
 * }
 * </pre>
 */
function get_modify_response_api_url(req,resp){
    
    //---------------------
    //下面是自定义规则填充的位置，将会进行替换
    ;API_FRONT_CUSTOM_JS;
    //---------------------
    return false;
}

//使用默认的参数对还是进行测试
function test_get_modify_response_api_url(){
    var req={
            "get": {
                "a": ["1"]
            }, 
            "method": "GET", 
            "path": "/test/a.php", 
            "request_uri": "/test/a.php?a=1",
            "remote_addr": "127.0.0.1:12345",
            "header": {
                "Accept": "text/html,application/xhtml+xml,application/xml;", 
                "Accept-Encoding": "gzip, deflate, sdch", 
                "Accept-Language": "zh-CN,zh;q=0.8,en;q=0.6", 
                "Cache-Control": "max-age=0", 
                "Connection": "close", 
                "Cookie": "_ga=GA1.1.967611859.xxxxxxx;cookie_b=xxxxx;", 
                "Dnt": "1", 
                "Upgrade-Insecure-Requests": "1", 
                "User-Agent": "Mozilla/5.0 xxxx ", 
                "Via": "api-front/0.7.6"
            }
        };
    var resp={
            "content_length": 571, 
            "header": {
                "Content-Length": "571", 
                "Content-Type": "text/html", 
                "Date": "Sun, 29 May 2016 02:41:17 GMT", 
                "Server": "nginx/1.10.0"
            }, 
            "http_code": 403
        };
    return get_modify_response_api_url(req,resp);
}


/**
 * 
 * http://example.com/response_modify.php 获取的逻辑：
 * $_POST 获取的内容
* Array
(
    [req] => xxxxx,json字符串，同上述的req
    [resp] => xxxxx,json字符串，同上述的resp
    [resp_content] =>字符串，原始resp的body内容
)
该接口输出的内容将会作为修改后的内容
输出 内容 NOT_CHANGE 则表示内容没有做修改。

response_modify.php 示例：
<?php

$req=json_decode($_POST["req"],true);

if($req["path"]!="/abc/user_list"){
    echo "NOT_CHANGE";//不是要处理的请求，不修改内容
    die;
}
$obj=json_decode($_POST["resp_content"],true);
$obj["data"]=date("Y-m-d H:i:s");//在原始的内容上添加一个字段
echo json_encode($obj);
*
*/